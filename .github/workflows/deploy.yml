name: nCloud CI/CD

on:
  push:
    branches: [ "main" ]  
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-18.04
    env:
      client-directory: ./client
      server-directory: ./server
      cron-server-directory: ./cron-server
      CI: false
    steps:
      - name: 체크아웃
        uses: actions/checkout@v3
        
      - name: 노드 버전 설치
        uses: actions/setup-node@v3
        with: 
          node-version: 16.10.0
            
      - name: 클라이언트 설치
        working-directory: ${{env.client-directory}}
        run: yarn
        
      - name: 클라이언트 env 파일 설정
        working-directory: ${{env.client-directory}}
        run: |
          touch .env
          echo REACT_APP_API_SERVER_URL_PRODUCTION=${{ secrets.REACT_APP_API_SERVER_URL_PRODUCTION }}\ >> .env
        
      - name: 클라이언트 빌드
        working-directory: ${{env.client-directory}}
        run: yarn build
      
      - name: API 서버 설치
        working-directory: ${{env.server-directory}}
        run: yarn
        
      - name: API 서버 env 파일 설정
        working-directory: ${{env.server-directory}}
        run: | 
          touch .env
          echo API_SERVER_PORT=${{ secrets.API_SERVER_PORT }}\ >> .env
          echo CLIENT_URL_PRODUCTION=${{ secrets.CLIENT_URL_PRODUCTION }}\ >> .env
          echo MONGODB_CONNECT_URI="${{ secrets.MONGODB_CONNECT_URI }}"\ >> .env
          echo NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }}\ >> .env
          echo NAVER_CLIENT_PASSWORD=${{ secrets.NAVER_CLIENT_PASSWORD }}\ >> .env
          echo OAUTH_NAVER_CLIENT_ID=${{ secrets.OAUTH_NAVER_CLIENT_ID }}\ >> .env
          echo OAUTH_NAVER_CLIENT_SECRET=${{ secrets.OAUTH_NAVER_CLIENT_SECRET }}\ >> .env
          echo REDIS_HOST=${{ secrets.REDIS_HOST }}\ >> .env
          echo REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}\ >> .env
          echo REDIS_PORT=${{ secrets.REDIS_PORT }}\ >> .env
          echo REDIS_USERNAME=${{ secrets.REDIS_USERNAME }}\ >> .env
          echo SESSION_SECRET=${{ secrets.SESSION_SECRET }}\ >> .env
          
      - name: API 서버 빌드
        working-directory: ${{env.server-directory}}
        run: yarn build
        
      - name: cron 서버 설치
        working-directory: ${{env.cron-server-directory}}
        run: yarn
        
      - name: cron 서버 env 파일 설정
        working-directory: ${{env.cron-server-directory}}
        run: | 
          touch .env
          echo MONGODB_CONNECT_URI="${{ secrets.MONGODB_CONNECT_URI }}"\ >> .env
          echo REDIS_HOST=${{ secrets.REDIS_HOST }}\ >> .env
          echo REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}\ >> .env
          echo REDIS_PORT=${{ secrets.REDIS_PORT }}\ >> .env
          echo REDIS_USERNAME=${{ secrets.REDIS_USERNAME }}\ >> .env
          echo SEOUL_CITY_API_ACCESS_KEY_0=${{ secrets.SEOUL_CITY_API_ACCESS_KEY_0 }}\ >> .env
          echo SEOUL_CITY_API_ACCESS_KEY_1=${{ secrets.SEOUL_CITY_API_ACCESS_KEY_1 }}\ >> .env
          echo SEOUL_CITY_API_ACCESS_KEY_2=${{ secrets.SEOUL_CITY_API_ACCESS_KEY_2 }}\ >> .env
          
      - name: cron 서버 빌드
        working-directory: ${{env.cron-server-directory}}
        run: yarn build
        
      - name: 배포 서버의 배포 관련 파일 삭제
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            rm -rf /usr/share/nginx/html/*
            cd web33-Mildo
            rm -rf *
            
      - name: API 서버, cron 서버 폴더 생성
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd web33-Mildo
            mkdir server
            mkdir cron-server
            
      - name: 클라이언트 빌드 폴더 복사
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: client/build
          target: "/usr/share/nginx/html"

      - name: API 서버 빌드 폴더 복사
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: server/dist/
          target: "web33-Mildo/server"
          strip_components: 1
          
      - name: API 서버 node_modules 폴더 복사
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: server/node_modules
          target: "web33-Mildo/server"
          strip_components: 1
          
      - name: API 서버 .env 파일 복사
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: server/.env
          target: "web33-Mildo/server/dist"
          strip_components: 1
          
      - name: cron 서버 빌드 폴더 복사
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: cron-server/dist/
          target: "web33-Mildo/cron-server"
          strip_components: 1
          
      - name: cron 서버 node_modules 폴더 복사
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: cron-server/node_modules
          target: "web33-Mildo/cron-server"
          strip_components: 1
          
      - name: cron 서버 .env 파일 복사
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: cron-server/.env
          target: "web33-Mildo/cron-server/dist"
          strip_components: 1

      - name: API 서버 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd web33-Mildo
            pm2 start server/dist/src/app.js
            pm2 reload server/dist/src/app.js
            pm2 start cron-server/dist/src/app.js
            pm2 reload cron-server/dist/src/app.js
